lang.name = Vars
lang.version = v1.0.0

# Var: $name = value
$var = Text
$null # null value var

func.printTerminal(-1, $var)  # Will print "Text"
func.printTerminal(-1, \$var2) # Will print "$var2"
func.printTerminal(-1, $null) # Will print "null"

func.printTerminal(-1, -----------------)

# Var types:
# Null
$var1 # Empty assignment

# Text
$var2 = Test

# Char
$var3 = C

# Int, Long, Float, Double
$var4 = 42

# Float, Double
$var5 = 42.42
$var6 = 42.
$var7 = .42
$var8 = 42e-2
$var9 = 42E3
$var10 = 42E-3

func.printTerminal(-1, $var1)
func.printTerminal(-1, $var2)
func.printTerminal(-1, $var3)
func.printTerminal(-1, $var4)
func.printTerminal(-1, $var5)
func.printTerminal(-1, $var6)
func.printTerminal(-1, $var7)
func.printTerminal(-1, $var8)
func.printTerminal(-1, $var9)
func.printTerminal(-1, $var10)

func.printTerminal(-1, -----------------)

# Multiline text

$mutlilineText = {{{first line
2nd: # no comment
3rd: \n not escaped
4th: # also no comment}}} # Everything between "{{{" and "}}}", no escape chars nor comments

func.printTerminal(-1, $mutlilineText)

func.printTerminal(-1, -----------------)

# Override values
$var5 = New value

func.printTerminal(-1, $var5)

func.printTerminal(-1, -----------------)

# Copy values
$var11 = $var5

func.printTerminal(-1, $var11)

func.printTerminal(-1, -----------------)

# Multi assignment
$c = A Var
$a = $b = $c
func.printTerminal(-1, \$a: $a)
func.printTerminal(-1, \$b: $b)
func.printTerminal(-1, \$c: $c)

# A lang translation must come first
lang.translation = $b = $c # Would be possible
$a = lang.translation.2 = $c # Wouldn't be possible (Result: $a -> "lang.translation.2 = $c" ("$c": Value of $c))
func.printTerminal(-1, \$a: $a)
func.printTerminal(-1, \$b: $b)
func.printTerminal(-1, \$c: $c)

# An empty assignment is not supported
$a = $b = # Won't work (Result: $a -> "$b =" ("$b": Value of $b))
func.printTerminal(-1, \$a: $a)
func.printTerminal(-1, \$b: $b)
func.printTerminal(-1, \$c: $c)

func.printTerminal(-1, -----------------)

# Concatination [vars]
$a = Text\s
$b = & Test

$c = $a$b
func.printTerminal(-1, $c)

func.printTerminal(-1, -----------------)

# Concatenation [vars & non vars]
$a = ABC-a
func.printTerminal(-1, $abc) # Will append "bc" after $a

$abc = VALUE
func.printTerminal(-1, $abc) # Appends nothing to $a, because $abc already exists

$abc = $a
$abc = $abcbc # Will append "bc" after $abc which is a copy of $a
func.printTerminal(-1, $abc)

func.printTerminal(-1, -----------------)

# $LANG vars
func.printTerminal(-1, $LANG_COMPILER_VERSION) # Will print the compiler version
func.printTerminal(-1, $LANG_PATH) # Will print the path to the lang file
func.printTerminal(-1, $LANG_RAND_MAX) # Will print the maximal value for func.rand
func.printTerminal(-1, $LANG_ERRNO) # Will print the errno value or 0 if no error
func.printTerminal(-1, &LANG_ARGS) # Will print the command line arguments (Array of TEXT elements, See: 04_arrays.lang) # Try in TermIO window: "executeLang -assets/tuts/02_vars.lang -First arg -Second arg -3rd -42 -TEST"

func.printTerminal(-1, -----------------)

$LANG_COMPILER_VERSION = TEST # $LANG vars can't be changed by the lang file
func.printTerminal(-1, $LANG_COMPILER_VERSION)

$LANG_TEST = TEST # $LANG vars can't be created either
func.printTerminal(-1, $LANG_TEST)

func.printTerminal(-1, $LANG_ERRNO) # $LANG vars can be changed by the interpreter
