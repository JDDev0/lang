lang.name = Error Handling
lang.version = v1.0.0

# Print Error function
# func.printError([Text]) # Prints the acutal error
#                           Will reset $LANG_ERRNO to 0
func.printError()
func.printError(Error)

# Error String function
# func.getErrorText(void) # Returns the actual error string
#                           Will reset $LANG_ERRNO to 0
func.printTerminal(-1, Error String: func.getErrorText())

# Actual Error code
# $LANG_ERRNO # Error code number
func.printTerminal(-1, Error code: $LANG_ERRNO)

# Error codes (v1.0.0):
#    No error
#         0: NO_ERROR
#    Variable Set error
#         1: FINAL_VAR_CHANGE
#    Linking errors
#         2: TO_MANY_INNER_LINKS
#         3: NO_LANG_FILE
#         4: FILE_NOT_FOUND
#    Function Pointer errors
#         5: INVALID_FUNC_PTR
#    System errors
#         6: STACK_OVERFLOW [Unsused]
#         7: NO_TERMINAL
#    Function errors
#         8: INVALID_ARG_COUNT
#         9: INVALID_LOG_LEVEL
#    Array errors:
#        10: INVALID_ARR_PTR
#    Number errors:
#        11: NO_HEX_NUM
#        12: NO_CHAR
#        13: NO_NUM
#        14: DIV_BY_ZERO
#    Array errors:
#        15: NEGATIVE_ARRAY_LEN
#        16: EMPTY_ARRAY
#        17: LENGTH_NAN
#        18: ARRAY_OUT_OF_BOUNDS
#        19: ARG_COUNT_NOT_ARR_LEN
#    Loop function errors:
#        20: INVALID_FUNC_PTR_LOOP
#    Function errors:
#        21: INVALID_ARGUMENTS
#        22: FUNCTION_NOT_FOUND
#        23: EOF
#    Compiler errors:
#        24: SYSTEM_ERROR
#    Loop function errors:
#        25: NEGATIVE_REPEAT_COUNT
#    Function errors:
#        26: LANG_REQ_NOT_FOUND
#        27: FUNCTION_NOT_SUPPORTED
#        28: BRACKET_MISMATCH
#    If statement errors:
#        29: IF_CONDITION_MISSING
#    Interpreter/Compiler errors:
#        30: INVALID_AST_NODE
#
# Warning codes (v1.0.0):
#    Predefined function warnings
#        -1: DEPRECATED_FUNC_CALL

# Error Handling example
$value = func.divi(42, 0)
con.if($LANG_ERRNO != 0) # "con.if($LANG_ERRNO)" would also be possible
	func.printError(An error occurred)
	func.printError($LANG_ERRNO was reseted) # Will print "No Error"
con.else
	# Do something
con.endif

func.printTerminal(-1, \s)

func.arrayMake(&a, -1)
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif

func.printTerminal(-1, \s)

func.arraySetAll(&a, 10, 32, 42)
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif

$LANG_VER = 42
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif

fp.test(Test1)
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif

func.repeat(fp.test, 42)
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif

func.repeat(fp.abc)
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif

func.printTerminal(-1, ((Test))
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif

$value = func.hexToDec(0xG42)
con.if($LANG_ERRNO)
	$errCode = $LANG_ERRNO
	func.printTerminal(5, An error occurred: func.getErrorText() [Code: $errCode])
con.else
	# Do something
con.endif
